##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.7.1] date: [Wed Jun 03 22:49:05 CEST 2020]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = f303
ADDRESS = 0x8004000
PYTHON     = python
DFU-UTIL   = dfu-util
DFU-SUFFIX = dfu-suffix

######################################
# building variables
######################################
# debug build?
DEBUG = 0
# optimization
OPT = -O3


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Src/main.c \
Src/ringbuf.c \
Src/hal.c \
Src/hal_tbl.c \
Src/config.c \
Src/commands.c \
Src/angle.c \
Src/usb_device.c \
Src/usbd_conf.c \
Src/usbd_desc.c \
Src/usbd_cdc_if.c \
Src/stm32f3xx_it.c \
Src/stm32f3xx_hal_msp.c \
Src/conf_templates.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_ll_usb.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_gpio.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_dma.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_exti.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim_ex.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_crc.c \
Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_crc_ex.c \
Src/system_stm32f3xx.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c \
Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c  

COMPS = Src/comps/term.c
COMPS += Src/comps/sim.c
COMPS += Src/comps/idq.c
COMPS += Src/comps/dq.c
COMPS += Src/comps/svm.c
COMPS += Src/comps/hv.c
COMPS += Src/comps/io.c
COMPS += Src/comps/pwm.c
COMPS += Src/comps/curpid.c
COMPS += Src/comps/iit.c
COMPS += Src/comps/pmsm_ttc.c
COMPS += Src/comps/spid.c
COMPS += Src/comps/ypid.c
COMPS += Src/comps/stp.c
COMPS += Src/comps/fault.c
COMPS += Src/comps/mpid.c
COMPS += Src/comps/reslimit.c
COMPS += Src/comps/pid.c
COMPS += Src/comps/pmsm_limits.c
COMPS += Src/comps/vel.c
COMPS += Src/comps/fb_switch.c

C_SOURCES += $(COMPS)

# ASM sources
ASM_SOURCES =  \
startup_stm32f303xc.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F303xC


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-IInc \
-IDrivers/STM32F3xx_HAL_Driver/Inc \
-IDrivers/STM32F3xx_HAL_Driver/Inc/Legacy \
-IMiddlewares/ST/STM32_USB_Device_Library/Core/Inc \
-IMiddlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc \
-IDrivers/CMSIS/Device/ST/STM32F3xx/Include \
-IDrivers/CMSIS/Include \
-IDrivers/CMSIS/Include


# compile gcc flags
FLAGS += -std=gnu11
FLAGS += -ffunction-sections
FLAGS += -fdata-sections
FLAGS += -Wall
FLAGS += -fno-builtin ## from old
FLAGS += -nostartfiles
FLAGS += -Wfatal-errors
FLAGS += -Wno-pointer-sign #for usb lib...
#FLAGS += -Wdouble-promotion
FLAGS += -Wfloat-conversion
FLAGS += -fsingle-precision-constant
#FLAGS += -ffast-math
FLAGS += -ffinite-math-only
FLAGS += -fno-trapping-math
FLAGS += -fno-signaling-nans
FLAGS += -fno-rounding-math
FLAGS += -fno-signed-zeros
FLAGS += -fno-math-errno

ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) $(FLAGS)

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) $(FLAGS)


ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F303RCTx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nosys.specs -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -u _printf_float -u _scanf_float

# default action: build all
all: tbl $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $(BUILD_DIR)/$(TARGET).elf
	$(SZ) $@

	#@$(PYTHON) tools/add_version_info.py $(TARGET).tmp $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

$(BUILD_DIR)/%.dfu: $(BUILD_DIR)/%.bin
	@cp $< $@
	@$(DFU-SUFFIX) -v 0483 -p df11 -a $@

btburn: all $(BUILD_DIR)/$(TARGET).dfu
	@$(PYTHON) tools/bootloader.py
	@sleep 1
	@$(DFU-UTIL) -d 0483:df11 -a 0 -s $(ADDRESS):leave -D $(BUILD_DIR)/$(TARGET).dfu

bt_flash:
	@$(PYTHON) tools/bootloader.py
	@sleep 1
	@$(DFU-UTIL) -d 0483:df11 -a 0 -s $(ADDRESS):leave -D $(BUILD_DIR)/$(TARGET).dfu

Inc/commandslist.h: tbl
Inc/hal_tbl.h: tbl
Src/hal_tbl.c: tbl
Src/conf_templates.c: tbl

tbl:
	@echo Generating tables
	@$(PYTHON) tools/create_config.py conf/template/* > Src/conf_templates.c
	@tools/create_hal_tbl.py Inc/hal_tbl.h Src/hal_tbl.c $(COMPS) 
	@tools/create_cmd.py $(C_SOURCES) > Inc/commandslist.h

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***